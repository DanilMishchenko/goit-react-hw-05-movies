{"version":3,"file":"static/js/movie-details-page.f1b640bf.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackButton.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","views/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  color: white;\n  width: 40px;\n  height: 40px;\n  border: 0;\n  border-radius: 50%;\n  background-image: linear-gradient(to right, #1d80fb, #cc50ff);\n  background-size: 200% 100%;\n  transition: all 750ms ease-in-out;\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    background-position: 100% 0;\n    transition: all 750ms ease-in-out;\n  }\n`;\n","import { useLocation, useNavigate } from 'react-router-dom';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport { Button } from './BackLink.styled';\n\nexport const BackButton = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const onGoBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  return (\n    <Button type=\"button\" onClick={onGoBack}>\n      <HiArrowNarrowLeft size=\"24px\" />\n    </Button>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  position: relative;\n  padding: 72px 40px;\n  color: white;\n  border-radius: 8px 8px 0 0;\n  background: linear-gradient(\n      90deg,\n      rgba(25, 25, 45, 0.6),\n      rgba(20, 20, 35, 0.8)\n    ),\n    url(${props => props.backdrop});\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const ImgContainer = styled.div`\n  min-width: 300px;\n  margin-right: 40px;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const TitleConrainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 8px;\n`;\n\nexport const Release = styled.span`\n  font-size: 20px;\n`;\n\nexport const GenresContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  margin-bottom: 24px;\n`;\n\nexport const Genres = styled.h2`\n  color: white;\n  margin-right: 16px;\n  text-shadow: 1px 1px 4px #1d80fb;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n`;\n\nexport const GenresItem = styled.li`\n  margin-right: 4px;\n\n  span {\n    font-weight: 700;\n  }\n`;\n\nexport const FactsContainer = styled.div`\n  margin-bottom: 16px;\n  strong {\n    display: block;\n  }\n`;\n\nexport const FactsList = styled.ul`\n  li {\n    display: flex;\n    align-items: flex-end;\n    :not(:last-child) {\n      margin-bottom: 8px;\n    }\n  }\n\n  h3 {\n    margin-right: 4px;\n  }\n`;\n\nexport const VoteAverage = styled.div`\n  display: flex;\n  align-items: center;\n  padding-left: 16px;\n`;\n\nexport const UserScoreChart = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 48px;\n  margin-right: 16px;\n  border-radius: 50%;\n  background: #1d80fb;\n  color: white;\n  transition: 250ms;\n\n  :hover {\n    transform: scale(1.1);\n  }\n\n  span {\n    font-size: 18px;\n    font-weight: 700;\n  }\n`;\n\nexport const Targetline = styled.p`\n  text-align: center;\n  margin-bottom: 8px;\n  font-size: 24px;\n  font-weight: 400;\n  font-style: italic;\n`;\n\nexport const OverviewContainer = styled.div`\n  span {\n    font-weight: 700;\n    letter-spacing: 0.04em;\n    line-height: normal;\n  }\n`;\n\nexport const Overview = styled(Genres)`\n  margin-bottom: 16px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 40px;\n  margin-bottom: 16px;\n  border-radius: 0 0 8px 8px;\n  background: #1d80fb;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2), 0 4px 6px rgba(0, 0, 0, 0.2);\n`;\n\nexport const Link = styled(NavLink)`\n  color: #0804f3;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.06;\n\n  :not(:last-child) {\n    margin-right: 16px;\n  }\n\n  &.active {\n    color: white;\n    border-bottom: 2px solid white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport * as moviesApi from 'services/moviesApi';\nimport { BackButton } from 'components/BackLink/BackButton';\n\nimport {\n  MovieContainer,\n  ImgContainer,\n  TitleConrainer,\n  Title,\n  Release,\n  GenresList,\n  GenresContainer,\n  Genres,\n  GenresItem,\n  Overview,\n  OverviewContainer,\n  Targetline,\n  VoteAverage,\n  UserScoreChart,\n  FactsContainer,\n  FactsList,\n  Link,\n  AdditionalInfo,\n} from './MovieInfo.styled';\n\nexport const MovieInfo = ({ movie }) => {\n  const location = useLocation();\n  const backdrop = `${moviesApi.BASE_URL_IMG}${movie.backdrop_path}`;\n\n  return (\n    <>\n      <MovieContainer backdrop={backdrop}>\n        <BackButton />\n        <ImgContainer>\n          <img\n            src={`${moviesApi.BASE_URL_IMG}${movie.poster_path}`}\n            alt={movie.title}\n          />\n        </ImgContainer>\n        <div>\n          <TitleConrainer>\n            <Title>{movie.title}</Title>\n            <Release>{movie.release_date}</Release>\n          </TitleConrainer>\n          <GenresContainer>\n            <Genres>Genres:</Genres>\n            <GenresList>\n              {movie.genres.map(elem => (\n                <GenresItem key={elem.id}>\n                  <span>{elem.name} /</span>\n                </GenresItem>\n              ))}\n            </GenresList>\n          </GenresContainer>\n          <FactsContainer>\n            <FactsList>\n              <li>\n                <h3>Budget:</h3>\n                <span>${movie.budget}</span>\n              </li>\n              <li>\n                <h3>Revenue:</h3>\n                <span>${movie.revenue}</span>\n              </li>\n            </FactsList>\n          </FactsContainer>\n          <VoteAverage>\n            <UserScoreChart>\n              <span>{movie.vote_average}</span>\n            </UserScoreChart>\n            <span>Vote average</span>\n          </VoteAverage>\n          <Targetline>{movie.tagline}</Targetline>\n          <OverviewContainer>\n            <Overview>Overview</Overview>\n            <span>{movie.overview}</span>\n          </OverviewContainer>\n        </div>\n      </MovieContainer>\n      <AdditionalInfo>\n        <Link to=\"cast\" state={location.state}>\n          Cast\n        </Link>\n        <Link to=\"reviews\" state={location.state}>\n          Reviews\n        </Link>\n      </AdditionalInfo>\n    </>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport * as moviesApi from 'services/moviesApi';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const selectedMovie = async () => {\n      try {\n        const movie = await moviesApi.getMoviesById(movieId);\n        setMovie(movie);\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n    selectedMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && <MovieInfo movie={movie} />}\n      <Outlet />\n    </>\n  );\n}\n"],"names":["Button","styled","BackButton","location","useLocation","navigate","useNavigate","type","onClick","state","from","size","MovieContainer","props","backdrop","ImgContainer","TitleConrainer","Title","Release","GenresContainer","Genres","GenresList","GenresItem","FactsContainer","FactsList","VoteAverage","UserScoreChart","Targetline","OverviewContainer","Overview","AdditionalInfo","Link","NavLink","MovieInfo","movie","moviesApi","backdrop_path","src","poster_path","alt","title","release_date","genres","map","elem","name","id","budget","revenue","vote_average","tagline","overview","to","MovieDetailsPage","movieId","useParams","useState","setMovie","useEffect","selectedMovie","console","log","message"],"sourceRoot":""}